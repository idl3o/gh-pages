name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write # Needed for gh-pages deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Update RubyGems
        run: gem update --system

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Updated to v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          # Verify npm registry accessibility
          npm ping || echo "Warning: npm registry might be slow or unavailable"

          # Install with fallbacks and retry logic
          npm ci || npm install || (sleep 5 && npm install --no-fund --no-audit)

          # Install critical dependencies with retry logic
          echo "Installing critical dependencies..."
          for i in 1 2 3; do
            npm install --save-dev vite-plugin-node-polyfills crypto-js jsdom && break || echo "Retry $i..."
            sleep 5
          done

          echo "Verifying vite-plugin-node-polyfills installation..."
          npm list vite-plugin-node-polyfills || echo "Warning: vite-plugin-node-polyfills not installed correctly"

          bundle install

      - name: Fix HTML and CSS Errors
        run: |
          # Create and run the error-fixing script
          chmod +x ./fix-html-css-errors.sh || echo "Creating fix-html-css-errors.sh..."
          cat > fix-html-css-errors.sh << 'EOF'
          #!/bin/bash
          # Quick script to fix common HTML and CSS errors

          # Fix header.html </body> tag issue
          if [ -f "_includes/header.html" ]; then
            sed -i 's/<\/body>/<\/div>/g' "_includes/header.html"
          fi

          # Fix homepage.html </li> tag issue
          if [ -f "_includes/homepage.html" ]; then
            sed -i '492s/<\/li>//' "_includes/homepage.html"
          fi

          # Fix navigation.html <a> tag termination
          if [ -f "_includes/navigation.html" ]; then
            sed -i '6s/<a \(.*\)$/<a \1>/g' "_includes/navigation.html"
          fi

          # Fix flymode.css unexpected }
          if [ -f "assets/css/flymode.css" ]; then
            sed -i '42s/}//' "assets/css/flymode.css"
          fi
          EOF
          chmod +x ./fix-html-css-errors.sh
          ./fix-html-css-errors.sh

      - name: Fix ESLint and Jekyll Issues
        run: |
          # Create necessary files if they don't exist
          if [ ! -f ".eslintignore" ]; then
            echo "_site/**
            .jekyll-cache/**
            vendor/**
            node_modules/**
            dist/**
            main_backup_*/**
            *.min.js" > .eslintignore
          fi

          # Fix Jekyll template errors
          chmod +x ./fix-jekyll-errors.sh || echo "No fix script found, skipping"
          ./fix-jekyll-errors.sh || echo "Fixing Jekyll errors failed, continuing"

      - name: Format and Lint
        run: |
          npx prettier --write . --ignore-path .eslintignore || echo "Prettier formatting skipped"
          npx eslint . --fix || echo "ESLint fixes skipped"
        continue-on-error: true

      - name: Build
        run: |
          # Set NODE_OPTIONS for Vite build compatibility
          export NODE_OPTIONS=--openssl-legacy-provider

          # Create a fallback vite config if needed
          if ! grep -q "vite-plugin-node-polyfills" package.json; then
            echo "Creating fallback vite.config.js without node polyfills..."
            cat > vite.config.js << 'EOF'
            import { defineConfig } from 'vite';
            export default defineConfig({
              define: {
                global: 'globalThis',
              },
              build: {
                minify: false,
                sourcemap: true
              }
            });
            EOF
          fi

          # Try full build first, fall back to Jekyll-only if needed
          npm run build || bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.4.3 # Updated to specific version
        with:
          folder: _site
          branch: gh-pages
          clean: true
          single-commit: true
          git-config-name: GitHub Actions
          git-config-email: github-actions@github.com
          commit-message: "Deploy website - ${GITHUB_SHA}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: site-artifact
          path: _site
          retention-days: 7 # Added retention period

      - name: Deployment Results
        run: |
          echo "Site built and deployed to gh-pages branch."
          echo "View your site at https://${{ github.repository_owner }}.github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)/"
