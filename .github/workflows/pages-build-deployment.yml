name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Check Ruby dependencies
  check-ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check for Gemfile
        id: check-gemfile
        run: |
          if [ -f Gemfile ]; then
            echo "gemfile=true" >> $GITHUB_OUTPUT
          else
            echo "gemfile=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Ruby if Gemfile exists
        if: steps.check-gemfile.outputs.gemfile == 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: false

      - name: Install Bundler
        if: steps.check-gemfile.outputs.gemfile == 'true'
        run: |
          gem install bundler -v "~> 2.3.0"
          bundle --version
        continue-on-error: true

      - name: Install dependencies with retry
        if: steps.check-gemfile.outputs.gemfile == 'true'
        run: |
          for i in 1 2 3; do
            bundle install --jobs 4 --retry 3 && break || echo "Retry $i..."
            sleep 5
          done
        continue-on-error: true

      - name: List Ruby gems
        if: steps.check-gemfile.outputs.gemfile == 'true'
        run: |
          echo "Installed Ruby version:"
          ruby --version
          echo "Installed Gems:"
          bundle list
        continue-on-error: true

  # Lint job
  lint:
    runs-on: ubuntu-latest
    needs: check-ruby
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Generate lockfile if missing
        run: |
          if [ ! -f package-lock.json ]; then
            npm i --package-lock-only
          fi

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run lint
        run: npm run lint
        continue-on-error: true

  # Build and test job
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Generate lockfile if missing
        run: |
          if [ ! -f package-lock.json ]; then
            npm i --package-lock-only
          fi

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'

  # Security scan job
  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Generate lockfile if missing
        run: |
          if [ ! -f package-lock.json ]; then
            npm i --package-lock-only
          fi

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run security scan
        run: npm audit --audit-level=high || true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
        continue-on-error: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
